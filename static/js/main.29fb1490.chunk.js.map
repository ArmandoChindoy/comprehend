{"version":3,"sources":["containers/Home.jsx","router/index.jsx","reportWebVitals.js","index.js"],"names":["require","config","Home","useState","result","setResult","preview","setPreview","className","action","onSubmit","e","preventDefault","AWS","Config","accessKeyId","secretAccessKey","region","update","comprehend","Comprehend","params","LanguageCode","TextList","batchDetectDominantLanguage","err","data","console","log","stack","ResultList","Languages","htmlFor","name","id","cols","rows","onChange","target","value","type","tabIndex","index","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAEAA,EAAQ,KAAUC,SAElB,IAuDeC,EAvDF,WAAO,IAAD,EAEYC,mBAAS,OAFrB,mBAERC,EAFQ,KAEDC,EAFC,OAGcF,mBAAS,OAHvB,mBAGRG,EAHQ,KAGAC,EAHA,KA6Bf,OACI,mCACA,sBAAKC,UAAU,wBAAf,UACA,oBAAIA,UAAU,KAAd,wBACI,uBAAMC,OAAO,IAAIC,SA5BT,SAAAC,GACZA,EAAEC,iBACF,IAAIX,EAAS,IAAIY,IAAIC,OAAO,CACxBC,YAAa,uBAAwBC,gBAAgB,2CAA4CC,OAAQ,cAE7GJ,IAAIZ,OAAOiB,OAAOjB,GAClB,IAAIkB,EAAa,IAAIN,IAAIO,WACnBC,EAAS,CACXC,aAAa,KACbC,SAAS,CAAC,GAAD,OAAIjB,KAEjBa,EAAWK,4BAA4BH,GAAQ,SAAUI,EAAKC,GAC1DD,EAAKE,QAAQC,IAAIH,EAAKA,EAAII,QAE1BF,QAAQC,IAAIF,GACZrB,EAAUqB,EAAKI,WAAW,GAAGC,UAAU,GAAGT,mBAa1C,UACI,iCACI,uBAAOU,QAAQ,OAAf,6BACA,uBACA,0BAAUC,KAAK,OAAOC,GAAG,OAAOC,KAAK,KAAKC,KAAK,KAAKC,SAAU,SAAC1B,GAAD,OAAKJ,EAAWI,EAAE2B,OAAOC,aAE3F,uBACJ,uBAAOC,KAAK,SAASD,MAAM,SAASE,SAAS,OAC7C,uBACA,sBAAKjC,UAAU,YAAf,UACI,oBAAIA,UAAU,eAAd,qBACA,+BAAOF,OAEX,+BACKF,aCnCFsC,EAZD,WACV,OACI,mCACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW1C,WCGhC2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.29fb1490.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport AWS from 'aws-sdk';\nrequire('dotenv').config();\n\nconst Home = () => {\n\n    const [result,setResult] = useState('N/A');\n    const [preview,setPreview] = useState('N/A');\n\n    const getData = e =>{\n        e.preventDefault();\n        var config = new AWS.Config({\n            accessKeyId: \"AKIAYHOESA7LFOOLAKXP\", secretAccessKey:\"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\", region: 'us-west-2'\n        });\n        AWS.config.update(config);\n        var comprehend = new AWS.Comprehend();\n        const params = {\n            LanguageCode:\"es\",\n            TextList:[`${preview}`]\n         }  \n        comprehend.batchDetectDominantLanguage(params, function (err, data) {\n        if (err) console.log(err, err.stack); // an error occurred\n        else{\n            console.log(data)\n            setResult(data.ResultList[0].Languages[0].LanguageCode);\n            };           // successful response\n    });\n\n    }\n    // function setpreview(value){\n    //     setPreview(value);\n    // }\n\n    return (\n        <>\n        <div className=\"container text-center\">\n        <h1 className=\"h1\">Comprehend</h1>\n            <form action=\"#\" onSubmit={getData}>\n                <span>\n                    <label htmlFor=\"text\">Info a analizar</label>\n                    <br/>\n                    <textarea name=\"text\" id=\"text\" cols=\"30\" rows=\"10\" onChange={(e)=>setPreview(e.target.value)}></textarea>\n                </span>\n                <br/>\n            <input type=\"submit\" value=\"Enviar\" tabIndex=\"-1\"/>\n            <br/>\n            <div className=\"text-left\">\n                <h2 className=\"h2 text-left\">Preview</h2>\n                <span>{preview}</span>\n            </div>\n            <span>\n                {result}\n            </span>\n            </form>\n        </div>\n        </>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport Home from '../containers/Home';\n\nconst index = () => {\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" component={Home}/>\n                </Switch>\n            </Router>\n        </>\n    );\n}\n\nexport default index;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/scss/bootstrap.scss';\nimport './index.css';\n// import App from './App';\nimport Router from './router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}